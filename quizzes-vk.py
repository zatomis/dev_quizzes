import os
from environs import Env
import random
import vk_api as vk
from vk_api.keyboard import VkKeyboard
from vk_api.longpoll import VkLongPoll, VkEventType
import redis
import logging


question_answer_count = 0
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

def clear_text(message):
    message = str(message.split('\n')[1])
    message = message.replace('.','')
    return message.lower().strip()

def load_quizzes():
    quizzes = []
    directory = 'questions'
    number = 0
    for file in os.listdir(directory):
        if file.endswith(".txt"):
            with open(os.path.join(directory, file), "r", encoding='KOI8-R') as sprite_file:
                quizzes.append(sprite_file.read())
    quizzes = random.choice(quizzes).split('\n\n')
    for i, question_answer in enumerate(quizzes):
        if "–í–æ–ø—Ä–æ—Å" in question_answer:
            redis_question.set(number, question_answer)
            redis_answer.set(number, quizzes[i+1])
            number += 1
    return number

def check_answer(event, vk_api):
    user_number_answer = user_question.get(event.user_id)
    correct_answer = clear_text(redis_answer.get(user_number_answer).decode("utf-8"))
    if correct_answer == event.text.strip():
        answer = "–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –î–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞–∂–º–∏ ¬´–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å¬ª"
    else:
        answer = f"–ù–µ—Ç üò≠ !!!\n–ü–æ–ø—Ä–æ–±—É–µ—à—å –µ—â—ë —Ä–∞–∑ ?"

    vk_api.messages.send(
        user_id=event.user_id,
        message=answer,
        random_id=random.randint(1, 1000),
    )

def send_question(event, vk_api):
    number = random.randint(0, question_answer_count)
    question_now = redis_question.get(number)
    user_question.set(event.user_id, number)
    vk_api.messages.send(
        user_id=event.user_id,
        message=question_now.decode("utf-8"),
        random_id=random.randint(1, 1000),
    )

def send_answer(event, vk_api):
    user_number_answer = user_question.get(event.user_id)
    correct_answer = clear_text(redis_answer.get(user_number_answer).decode("utf-8"))
    answer = f"–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç\n\n{correct_answer}"

    vk_api.messages.send(
        user_id=event.user_id,
        message=answer,
        random_id=random.randint(1, 1000),
    )


def start_communication(event, vk_api):
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button("–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å")
    keyboard.add_button("–°–¥–∞—Ç—å—Å—è")
    keyboard.add_line()
    keyboard.add_button("–ú–æ–π —Å—á—ë—Ç")
    vk_api.messages.send(
        user_id=event.user_id,
        message="–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∏–∫—Ç–æ—Ä–∏–Ω–Ω—ã–π –±–æ—Ç Ô∏è!",
        random_id=random.randint(1, 1000),
        keyboard=keyboard.get_keyboard(),
    )

if __name__ == "__main__":
    env: Env = Env()
    env.read_env()
    host = env('REDIS_HOST')
    port = env('REDIS_PORT')
    redis_answer = redis.Redis(host=host, port=port, db=0, protocol=3)
    redis_question = redis.Redis(host=host, port=port, db=1, protocol=3)
    user_question = redis.Redis(host=host, port=port, db=2, protocol=3)

    logger.setLevel(logging.INFO)
    logger.info('–í–ö –ò–≥—Ä–∞ - –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞')
    question_answer_count = load_quizzes()

    vk_key_token = env('VK')
    vk_session = vk.VkApi(token=vk_key_token)
    vk_api = vk_session.get_api()
    longpoll = VkLongPoll(vk_session)
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW and event.to_me:
            if event.text == "–ù–∞—á–∞—Ç—å":
                start_communication(event, vk_api)
            elif event.text == "–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å":
                send_question(event, vk_api)
            elif event.text == "–°–¥–∞—Ç—å—Å—è":
                send_answer(event, vk_api)
                send_question(event, vk_api)
            else:
                check_answer(event, vk_api)